# ü§ñ Proyecto 2 ‚Äì Coche Omnidireccional Controlado por Bluetooth (ESP32 + Xbox Controller)

> üöÄ Proyecto acad√©mico de control de movimiento y actuadores, integrando el ESP32 con comunicaci√≥n Bluetooth y llantas omnidireccionales.

---

## 1Ô∏è‚É£ Resumen

- **Nombre del proyecto:** Coche de Futbol Bluetooth con ESP32  
- **Equipo / Autor(es):** Eduardo Salamanca y equipo  
- **Curso / Asignatura:** Electr√≥nica y Programaci√≥n de Microcontroladores  
- **Fecha:** 20/10/2025  
- **Descripci√≥n breve:**  
  Este proyecto implementa un coche omnidireccional controlado mediante Bluetooth, usando un control de Xbox y un ESP32.  
  El objetivo final fue participar en partidos tipo f√∫tbol con los coches controlados remotamente.

---

## 2Ô∏è‚É£ Objetivos

- **General:**  
  Dise√±ar e implementar un sistema m√≥vil controlado por Bluetooth que permita controlar la direcci√≥n, velocidad y rotaci√≥n mediante un control inal√°mbrico.

- **Espec√≠ficos:**  
  - Implementar el control de movimiento con llantas omnidireccionales.  
  - Integrar puentes H para controlar los motores.  
  - Programar el ESP32 para recibir se√±ales Bluetooth del control.  
  - Dise√±ar la carcasa del coche en MDF mediante corte l√°ser.  
  - Incorporar el control de servomotores y LED del proyecto anterior.  

---

## 3Ô∏è‚É£ Alcance y Exclusiones

- **Incluye:**  
  - Control inal√°mbrico con Bluetooth.  
  - Control direccional completo (adelante, atr√°s, izquierda, derecha, giro).  
  - Control de velocidad variable.  
  - Estructura mec√°nica cortada en MDF.  
  - Integraci√≥n de LEDs y servomotores del proyecto anterior.  

- **No incluye:**  
  - Control por Wi-Fi o conexi√≥n a Internet.  
  - Sensores de distancia o evitaci√≥n de obst√°culos (versi√≥n futura).  

---

## 4Ô∏è‚É£ Requisitos

### üß† Software
- **IDE:** Arduino IDE (versi√≥n m√°s reciente)  
- **Plataforma:** ESP32 Dev Module  
- **Librer√≠as necesarias:**  
  - `BluetoothSerial.h`  
  - `Servo.h`  

### ‚öôÔ∏è Hardware
- ESP32  
- 4 llantas omnidireccionales  
- 2 puentes H L298N  
- Servomotor SG90 (para direcci√≥n o accesorio)  
- Jumpers y cables Dupont  
- Fuente de alimentaci√≥n 12 V  
- Carcasa de MDF cortada con l√°ser  
- Control Xbox (Bluetooth)  
- Protoboard  

---

## 5Ô∏è‚É£ C√≥digo Principal (ESP32)

```cpp
#include "BluetoothSerial.h"
#include <Servo.h>

BluetoothSerial SerialBT;

#define ENA 25
#define IN1 26
#define IN2 27
#define IN3 14
#define IN4 12
#define ENB 13

Servo servo;

char comando;

void setup() {
  Serial.begin(115200);
  SerialBT.begin("Coche_BT_ESP32");
  servo.attach(15);
  
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  
  Serial.println("Esperando conexi√≥n Bluetooth...");
}

void loop() {
  if (SerialBT.available()) {
    comando = SerialBT.read();
    Serial.print("Comando recibido: ");
    Serial.println(comando);

    switch (comando) {
      case 'F':  // Adelante
        digitalWrite(IN1, HIGH);
        digitalWrite(IN2, LOW);
        digitalWrite(IN3, HIGH);
        digitalWrite(IN4, LOW);
        analogWrite(ENA, 255);
        analogWrite(ENB, 255);
        break;

      case 'B':  // Atr√°s
        digitalWrite(IN1, LOW);
        digitalWrite(IN2, HIGH);
        digitalWrite(IN3, LOW);
        digitalWrite(IN4, HIGH);
        analogWrite(ENA, 255);
        analogWrite(ENB, 255);
        break;

      case 'L':  // Izquierda
        digitalWrite(IN1, LOW);
        digitalWrite(IN2, HIGH);
        digitalWrite(IN3, HIGH);
        digitalWrite(IN4, LOW);
        break;

      case 'R':  // Derecha
        digitalWrite(IN1, HIGH);
        digitalWrite(IN2, LOW);
        digitalWrite(IN3, LOW);
        digitalWrite(IN4, HIGH);
        break;

      case 'S':  // Stop
        digitalWrite(IN1, LOW);
        digitalWrite(IN2, LOW);
        digitalWrite(IN3, LOW);
        digitalWrite(IN4, LOW);
        break;

      case 'V':  // Servo: variaci√≥n de √°ngulo
        for (int i = 0; i <= 180; i += 10) {
          servo.write(i);
          delay(50);
        }
        for (int i = 180; i >= 0; i -= 10) {
          servo.write(i);
          delay(50);
        }
        break;
    }
  }
}
